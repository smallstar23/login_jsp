Ajax(Asychronous Javascript and XML)
- 빠르게 동작하는 웹페이지를 만들기 위한 개발기법
- 웹페이지 전체를 다시 로딩하지 않고 웹페이지의 일부분만을 갱신
- 백그라운드 영역에서 서버와 통신하여 그 결과를 웹페이지에 표시
- 서버와 데이터를 주고받는 데이터는 HTML, XML, JSON, 텍스트 등.

Ajax의 장점
- 웹페이지 전체를 다시 로딩하지 않고 웹페이지의 일부분만을 갱신
- 웹페이지가 로드 된 후에 서버로 데이터를 요청을 보내거나 받을 수 있음
- 다양한 동적 페이지의 구현이 가능함

Ajax의 단점
- 페이지의 이동이 없기 때문에 히스토리가 남지 않음
- 반복적인 데이터를 요청하게 되면 느려지거나 작동하지 않음
- 서버에서 클라이언트로 먼저 요청할 수 없음

XMLHttpRequest 객체
- Ajax의 가장 핵심적인 구성 요소는 XMLHttpRequest 객체
- 웹 브라우저가 서버와 데이터를 교환할때 사용
- 백그라운드에서 계속 서버와 통신할 수 있는 기능을 제공

	const 객체명= new XMLHttpRequest();
	
open()
- 서버에 보낼 Ajax 요청의 형식을 설정
	open(전달방식, URL주소, 동기여부);
	전달방식: get or post
	URL주소: 요청을 처리할 서버의 파일 주소
	동기여부: 요청을 동기식으로 전달할지 비동기식으로 전달할지 여부 선택(true: 기본, 비동기)
	
send()
- 작성된 Ajax를 서버로 전달
- send() get 방식, send("문자열") post방식

readyState
- XMLHttpRequest 객체의 상태를 나타내는 프로퍼티
- 객체 생성시 0
- open() 메소드를 호출: 1
- send() 메소드를 호출: 2
- loading 중...: 3
- 완료(XMLHttpRequest.done): 4
- 프로퍼티 값이 변경될때마다 onreadystatechange() 함수를 호출(콜백)

status
- XMLHttpRequest 객체가 접속한 서버페이지의 상태
- 정상적인 호출: 200, 페이지가 없는 경우: 404
